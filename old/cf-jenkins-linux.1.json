{
    "AWSTemplateFormatVersion" : "2010-09-09",
    
    "Description" : "AWS CloudFormation Sample Template LAMP_Single_Instance: Create a LAMP stack using a single EC2 instance and a local MySQL database for storage. This template demonstrates using the AWS CloudFormation bootstrap scripts to install the packages and files necessary to deploy the Apache web server, PHP and MySQL at instance launch time. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",
    
    "Parameters" : {
        
      "KeyName": {
        "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
        "Type": "AWS::EC2::KeyPair::KeyName",
        "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
      },    
  
      "InstanceType" : {
        "Description" : "WebServer EC2 instance type",
        "Type" : "String",
        "Default" : "t2.micro",
        "AllowedValues" : [ "t2.micro"],
        "ConstraintDescription" : "must be a valid EC2 instance type."
      },
  
      "SSHLocation" : {
        "Description" : " The IP address range that can be used to SSH to the EC2 instances",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "Default": "0.0.0.0/0",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
      } 
    },
    
    "Mappings" : {
      "AWSInstanceType2Arch" : {
        "t2.micro"    : { "Arch" : "HVM64"  }
      },

      "AWSInstanceType2NATArch" : {
        "t2.micro"    : { "Arch" : "NATHVM64"  }
      },

      "AWSRegionArch2AMI" : {
        "us-east-1"        : {"PV64" : "ami-2a69aa47", "HVM64" : "ami-97785bed", "HVMG2" : "ami-0a6e3770"}
      }
  
    },
      
    "Resources" : {     
        
      "WebServerInstance": {  
        "Type": "AWS::EC2::Instance",
        "Metadata" : {
          "AWS::CloudFormation::Init" : {
            "configSets" : {
              "InstallAndRun" : [ "Install" ]
            },
  
            "Install" : {
              "packages" : {
                "yum" : {
                    "java-1.8.0-openjdk-devel": [],
                    "jenkins": [],
                    "git": []
                }
              },
  
              "files" : {
                "/etc/cfn/cfn-hup.conf" : {
                  "content" : { "Fn::Join" : ["", [
                    "[main]\n",
                    "stack=", { "Ref" : "AWS::StackId" }, "\n",
                    "region=", { "Ref" : "AWS::Region" }, "\n"
                  ]]},
                  "mode"    : "000400",
                  "owner"   : "root",
                  "group"   : "root"
                },
  
                "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                  "content": { "Fn::Join" : ["", [
                    "[cfn-auto-reloader-hook]\n",
                    "triggers=post.update\n",
                    "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
                    "action=/opt/aws/bin/cfn-init -v ",
                    "         --stack ", { "Ref" : "AWS::StackName" },
                    "         --resource WebServerInstance ",
                    "         --configsets InstallAndRun ",
                    "         --region ", { "Ref" : "AWS::Region" }, "\n",
                    "runas=root\n"
                  ]]},
                  "mode"    : "000400",
                  "owner"   : "root",
                  "group"   : "root"
                }
              },

                "commands" : {
                    "start_service": {
                        "command": "sudo service jenkins start"
                    }
                },
  
              "services" : {
                "sysvinit" : {  
                    "jenkins" : { "enabled" : "true", "ensureRunning" : "true" },
                    "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
                                "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}
                }
              }
            },

            "Configure" : {
                "commands" : {
                    "update_config": {
                        "command": "sudo sed -i 's|<useSecurity>true|<useSecurity>false|g' /var/lib/jenkins/config.xml"
                    },
                    "restart_service": {
                        "command": "sudo service jenkins restart"
                    }
                },
                "services" : {
                    "sysvinit" : {  
                        "jenkins" : { "enabled" : "true", "ensureRunning" : "true" }
                    }
                  }
            }
  
          }
        },
        "Properties": {
          "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                            { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
          "InstanceType"   : { "Ref" : "InstanceType" },
          "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
          "KeyName"        : { "Ref" : "KeyName" },
          "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
               "#!/bin/bash -xe\n",
               "yum update -y aws-cfn-bootstrap\n",
               "yum remove -y java\n",

               "sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins.io/redhat/jenkins.repo\n",
               "sudo rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key\n",
  
               "# Install the files and packages from the metadata\n",
               "/opt/aws/bin/cfn-init -v ",
               "         --stack ", { "Ref" : "AWS::StackName" },
               "         --resource WebServerInstance ",
               "         --configsets InstallAndRun ",
               "         --region ", { "Ref" : "AWS::Region" }, "\n",
  
               "# Signal the status from cfn-init\n",
               "/opt/aws/bin/cfn-signal -e $? ",
               "         --stack ", { "Ref" : "AWS::StackName" },
               "         --resource WebServerInstance ",
               "         --region ", { "Ref" : "AWS::Region" }, "\n"
          ]]}}        
        },
        "CreationPolicy" : {
          "ResourceSignal" : {
            "Timeout" : "PT5M"
          }
        }
      },
      
      "WebServerSecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "Enable HTTP access via port 80",
          "SecurityGroupIngress" : [
            {"IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"},
            {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
          ]
        }      
      }          
    },
    
    "Outputs" : {
      "WebsiteURL" : {
        "Description" : "URL for newly created LAMP stack",
        "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServerInstance", "PublicDnsName" ]}, ":8080"]] }
      },
      "Password" : {
        "Description" : "URL for newly created LAMP stack",
        "Value" : { "Fn::Join" : ["", ["cat /var/lib/jenkins/secrets/initialAdminPassword"]] }
      }
    }
  }
  